{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect, useCallback } from 'react';\nfunction useCallbackRef(callback) {\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return callbackRef.current?.(...args);\n  }, deps);\n}\nexport { useCallbackRef };","map":{"version":3,"names":["useRef","useEffect","useCallback","useCallbackRef","callback","deps","arguments","length","undefined","callbackRef","current","_len","args","Array","_key"],"sources":["/Users/macbookair/Documents/namangan-project/node_modules/@chakra-ui/hooks/dist/esm/use-callback-ref.mjs"],"sourcesContent":["'use client';\nimport { useRef, useEffect, useCallback } from 'react';\n\nfunction useCallbackRef(callback, deps = []) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useCallback((...args) => callbackRef.current?.(...args), deps);\n}\n\nexport { useCallbackRef };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEtD,SAASC,cAAcA,CAACC,QAAQ,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACzC,MAAMG,WAAW,GAAGT,MAAM,CAACI,QAAQ,CAAC;EACpCH,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACC,OAAO,GAAGN,QAAQ;EAChC,CAAC,CAAC;EACF,OAAOF,WAAW,CAAC;IAAA,SAAAS,IAAA,GAAAL,SAAA,CAAAC,MAAA,EAAIK,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAR,SAAA,CAAAQ,IAAA;IAAA;IAAA,OAAKL,WAAW,CAACC,OAAO,GAAG,GAAGE,IAAI,CAAC;EAAA,GAAEP,IAAI,CAAC;AACvE;AAEA,SAASF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
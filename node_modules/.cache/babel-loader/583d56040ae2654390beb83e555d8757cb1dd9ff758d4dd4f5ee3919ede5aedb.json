{"ast":null,"code":"function replaceWhiteSpace(value) {\n  let replaceValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\")) return value;\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", `\\\\.`) : value;\n}\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\nfunction addPrefix(value) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\nfunction toVarReference(name, fallback) {\n  return `var(${name}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVarDefinition(value) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return escape(`--${addPrefix(value, prefix)}`);\n}\nfunction cssVar(name, fallback, cssVarPrefix) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\nfunction defineCssVars(scope, keys) {\n  const vars = {};\n  for (const key of keys) {\n    if (Array.isArray(key)) {\n      const [name, fallback] = key;\n      vars[name] = cssVar(`${scope}-${name}`, fallback);\n      continue;\n    }\n    vars[key] = cssVar(`${scope}-${key}`);\n  }\n  return vars;\n}\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };","map":{"version":3,"names":["replaceWhiteSpace","value","replaceValue","arguments","length","undefined","replace","escape","valueStr","toString","escapeSymbol","escapeDot","includes","isDecimal","Number","isInteger","parseFloat","addPrefix","prefix","filter","Boolean","join","toVarReference","name","fallback","toVarDefinition","cssVar","cssVarPrefix","cssVariable","variable","reference","defineCssVars","scope","keys","vars","key","Array","isArray"],"sources":["/Users/macbookair/Documents/namangan-project/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/css-var.mjs"],"sourcesContent":["function replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\"))\n    return value;\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", `\\\\.`) : value;\n}\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\nfunction toVarReference(name, fallback) {\n  return `var(${name}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVarDefinition(value, prefix = \"\") {\n  return escape(`--${addPrefix(value, prefix)}`);\n}\nfunction cssVar(name, fallback, cssVarPrefix) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\nfunction defineCssVars(scope, keys) {\n  const vars = {};\n  for (const key of keys) {\n    if (Array.isArray(key)) {\n      const [name, fallback] = key;\n      vars[name] = cssVar(`${scope}-${name}`, fallback);\n      continue;\n    }\n    vars[key] = cssVar(`${scope}-${key}`);\n  }\n  return vars;\n}\n\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };\n"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,KAAK,EAAsB;EAAA,IAApBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAClD,OAAOF,KAAK,CAACK,OAAO,CAAC,MAAM,EAAEJ,YAAY,CAAC;AAC5C;AACA,SAASK,MAAMA,CAACN,KAAK,EAAE;EACrB,MAAMO,QAAQ,GAAGR,iBAAiB,CAACC,KAAK,CAACQ,QAAQ,EAAE,CAAC;EACpD,OAAOC,YAAY,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;AAC1C;AACA,SAASG,SAASA,CAACV,KAAK,EAAE;EACxB,IAAIA,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC,EACvB,OAAOX,KAAK;EACd,MAAMY,SAAS,GAAG,CAACC,MAAM,CAACC,SAAS,CAACC,UAAU,CAACf,KAAK,CAACQ,QAAQ,EAAE,CAAC,CAAC;EACjE,OAAOI,SAAS,GAAGZ,KAAK,CAACK,OAAO,CAAC,GAAG,EAAG,KAAI,CAAC,GAAGL,KAAK;AACtD;AACA,SAASS,YAAYA,CAACT,KAAK,EAAE;EAC3B,OAAOA,KAAK,CAACK,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC;AACnD;AACA,SAASW,SAASA,CAAChB,KAAK,EAAe;EAAA,IAAbiB,MAAM,GAAAf,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnC,OAAO,CAACe,MAAM,EAAEjB,KAAK,CAAC,CAACkB,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAClD;AACA,SAASC,cAAcA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACtC,OAAQ,OAAMD,IAAK,GAAEC,QAAQ,GAAI,KAAIA,QAAS,EAAC,GAAG,EAAG,GAAE;AACzD;AACA,SAASC,eAAeA,CAACxB,KAAK,EAAe;EAAA,IAAbiB,MAAM,GAAAf,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACzC,OAAOI,MAAM,CAAE,KAAIU,SAAS,CAAChB,KAAK,EAAEiB,MAAM,CAAE,EAAC,CAAC;AAChD;AACA,SAASQ,MAAMA,CAACH,IAAI,EAAEC,QAAQ,EAAEG,YAAY,EAAE;EAC5C,MAAMC,WAAW,GAAGH,eAAe,CAACF,IAAI,EAAEI,YAAY,CAAC;EACvD,OAAO;IACLE,QAAQ,EAAED,WAAW;IACrBE,SAAS,EAAER,cAAc,CAACM,WAAW,EAAEJ,QAAQ;EACjD,CAAC;AACH;AACA,SAASO,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAClC,MAAMC,IAAI,GAAG,CAAC,CAAC;EACf,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;IACtB,IAAIG,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACtB,MAAM,CAACZ,IAAI,EAAEC,QAAQ,CAAC,GAAGW,GAAG;MAC5BD,IAAI,CAACX,IAAI,CAAC,GAAGG,MAAM,CAAE,GAAEM,KAAM,IAAGT,IAAK,EAAC,EAAEC,QAAQ,CAAC;MACjD;IACF;IACAU,IAAI,CAACC,GAAG,CAAC,GAAGT,MAAM,CAAE,GAAEM,KAAM,IAAGG,GAAI,EAAC,CAAC;EACvC;EACA,OAAOD,IAAI;AACb;AAEA,SAASjB,SAAS,EAAES,MAAM,EAAEK,aAAa,EAAEN,eAAe,EAAEH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}